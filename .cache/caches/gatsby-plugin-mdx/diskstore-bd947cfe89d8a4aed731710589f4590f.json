{"expireTime":9007200878832417000,"key":"gatsby-plugin-mdx-entire-payload-58ff725a885c0c8b01c84dfff2d9971b--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Kaleb Humpal","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Software Developer","position":{"start":{"line":3,"column":4,"offset":20},"end":{"line":3,"column":22,"offset":38},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":17},"end":{"line":3,"column":22,"offset":38},"indent":[]}},{"type":"jsx","value":"<Socials\n  socials={[\n    {\n      title: \"GitHub\",\n      icon: \"github\",\n      url: \"https://github.com/kaleblub/\",\n    },\n    {\n      title: \"Instagram\",\n      icon: \"instagram\",\n      url: \"#\",\n    },\n    {\n      title: \"HackerOne\",\n      icon: \"hackerone\",\n    },\n    {\n      title: \"HackerRank\",\n      icon: \"hackerrank\",\n    },\n    {\n      title: \"LinkedIn\",\n      icon: \"linkedin\",\n    },\n    {\n      title: \"StackOverFlow\",\n      icon: \"stackoverflow\",\n    },\n    {\n      title: \"Email\",\n      icon: \"email\",\n    },\n    {\n      title: \"Discord\",\n      icon: \"discord\",\n    },\n  ]}\n/>","position":{"start":{"line":5,"column":1,"offset":40},"end":{"line":42,"column":3,"offset":630},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Home\",\"layout\":\"center\"}","position":{"start":{"line":45,"column":1,"offset":633},"end":{"line":45,"column":63,"offset":695},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":45,"column":63,"offset":695}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Home\",\n  \"layout\": \"center\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Socials = makeShortcode(\"Socials\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Kaleb Humpal\"), mdx(\"h2\", null, \"Software Developer\"), mdx(Socials, {\n    socials: [{\n      title: \"GitHub\",\n      icon: \"github\",\n      url: \"https://github.com/kaleblub/\"\n    }, {\n      title: \"Instagram\",\n      icon: \"instagram\",\n      url: \"#\"\n    }, {\n      title: \"HackerOne\",\n      icon: \"hackerone\"\n    }, {\n      title: \"HackerRank\",\n      icon: \"hackerrank\"\n    }, {\n      title: \"LinkedIn\",\n      icon: \"linkedin\"\n    }, {\n      title: \"StackOverFlow\",\n      icon: \"stackoverflow\"\n    }, {\n      title: \"Email\",\n      icon: \"email\"\n    }, {\n      title: \"Discord\",\n      icon: \"discord\"\n    }],\n    mdxType: \"Socials\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Home\",\n  \"layout\": \"center\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Socials = makeShortcode(\"Socials\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Kaleb Humpal`}</h1>\n    <h2>{`Software Developer`}</h2>\n    <Socials socials={[{\n      title: \"GitHub\",\n      icon: \"github\",\n      url: \"https://github.com/kaleblub/\"\n    }, {\n      title: \"Instagram\",\n      icon: \"instagram\",\n      url: \"#\"\n    }, {\n      title: \"HackerOne\",\n      icon: \"hackerone\"\n    }, {\n      title: \"HackerRank\",\n      icon: \"hackerrank\"\n    }, {\n      title: \"LinkedIn\",\n      icon: \"linkedin\"\n    }, {\n      title: \"StackOverFlow\",\n      icon: \"stackoverflow\"\n    }, {\n      title: \"Email\",\n      icon: \"email\"\n    }, {\n      title: \"Discord\",\n      icon: \"discord\"\n    }]} mdxType=\"Socials\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}